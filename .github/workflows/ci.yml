name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  PYTHON_VERSION: '3.11'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      docs_only: ${{ steps.flag.outputs.docs_only }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            docs:
              - '**/*.md'
            code:
              - '**'
              - '!**/*.md'
      - id: flag
        run: if [[ "${{ steps.filter.outputs.docs }}" == 'true' && "${{ steps.filter.outputs.code }}" != 'true' ]]; then echo "docs_only=true" >> "$GITHUB_OUTPUT"; else echo "docs_only=false" >> "$GITHUB_OUTPUT"; fi

  lint:
    needs: changes
    if: needs.changes.outputs.docs_only != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ env.PYTHON_VERSION }} }
      - run: python -m pip install --upgrade pip ruff
      - run: ruff check .

  pytest:
    needs: changes
    if: needs.changes.outputs.docs_only != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ env.PYTHON_VERSION }} }
      - run: |
          python -m pip install --upgrade pip
          for req in requirements*.txt; do
            [ -f "$req" ] && pip install -r "$req"
          done
      - run: pytest -q

  pip-audit:
    needs: changes
    if: needs.changes.outputs.docs_only != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ env.PYTHON_VERSION }} }
      - run: python -m pip install --upgrade pip pip-audit
      - run: |
          files=$(ls requirements*.txt 2>/dev/null || true)
          if [ -n "$files" ]; then
            for req in $files; do
              pip-audit -r "$req"
            done
          else
            pip-audit
          fi

  providers-integ:
    needs: [changes, pytest]
    if: needs.changes.outputs.docs_only != 'true' && (secrets.OPENAI_API_KEY != '' || secrets.GEMINI_API_KEY != '')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ env.PYTHON_VERSION }} }
      - run: |
          python -m pip install --upgrade pip
          for req in requirements*.txt; do
            [ -f "$req" ] && pip install -r "$req"
          done
      - env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          if [ -d tests/providers_integ ]; then
            pytest -q tests/providers_integ
          else
            echo 'tests/providers_integ not found; skipping.'
          fi
