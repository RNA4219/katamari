name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      docs_only: ${{ steps.docs.outputs.docs_only }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            docs:
              - '**/*.md'
            non_docs:
              - '**'
              - '!**/*.md'
      - id: docs
        run: |
          if [[ "${{ steps.filter.outputs.docs }}" == 'true' && "${{ steps.filter.outputs.non_docs }}" != 'true' ]]; then
            echo "docs_only=true" >> "$GITHUB_OUTPUT"
          else
            echo "docs_only=false" >> "$GITHUB_OUTPUT"
          fi

  build:
    name: Lint and test
    needs: changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-*.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          shopt -s nullglob
          for req in requirements*.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
      - name: Ruff
        run: pipx run ruff check .
      - name: Pytest
        if: needs.changes.outputs.docs_only != 'true'
        run: pytest -q
      - name: Pip Audit
        if: needs.changes.outputs.docs_only != 'true'
        run: pipx run pip-audit || true

  providers-integ:
    name: Provider smoke tests
    needs:
      - changes
      - build
    if: needs.changes.outputs.docs_only != 'true' && (secrets.OPENAI_API_KEY != '' || secrets.GEMINI_API_KEY != '')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-*.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          shopt -s nullglob
          for req in requirements*.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
      - name: Run provider integration tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          if [ -d tests/providers_integ ]; then
            pytest -q tests/providers_integ
          else
            echo 'tests/providers_integ not found; skipping.'
          fi
